<script>
$(function () {sagecell.makeSagecell({inputLocation: '.sage-COV', linked: true});});
</script><h5 class="sage">
<span class="type">Sage</span> <span class="acro">COV</span> <span class="titletext">Casting Out Vectors</span>
</h5>


<p>We will redo <a class="knowl" acro="COV" type="Example" title="Casting out vectors" knowl="./knowls/example.COV.knowl">Example COV</a>, though somewhat tersely, just producing the justification for each time we toss a vector (a specific relation of linear dependence), and then verifying that the resulting spans, each with one fewer vector, still produce the original span.  We also introduce the <span class="code">.remove()</span> method for lists.  Ready?  Here we go.</p>

<br><br><div class="sage-COV"><script type="text/x-sage">V = QQ^4
v1 = vector(QQ,  [ 1,   2,  0,  -1])
v2 = vector(QQ,  [ 4,   8,  0,  -4])
v3 = vector(QQ,  [ 0,  -1,  2,   2])
v4 = vector(QQ,  [-1,   3, -3,   4])
v5 = vector(QQ,  [ 0,   9, -4,   8])
v6 = vector(QQ,  [ 7, -13, 12, -31])
v7 = vector(QQ,  [-9,   7, -8,  37])
S = [v1, v2, v3, v4, v5, v6, v7]
W = V.span(S)
D = V.linear_dependence(S, zeros='right')
D
</script></div>

<br><br><div class="sage-COV"><script type="text/x-sage">D[0]
</script></div>

<br><br><div class="sage-COV"><script type="text/x-sage">S.remove(v2)
W == V.span(S)
</script></div>

<br><br><div class="sage-COV"><script type="text/x-sage">D[1]
</script></div>

<br><br><div class="sage-COV"><script type="text/x-sage">S.remove(v5)
W == V.span(S)
</script></div>

<br><br><div class="sage-COV"><script type="text/x-sage">D[2]
</script></div>

<br><br><div class="sage-COV"><script type="text/x-sage">S.remove(v6)
W == V.span(S)
</script></div>

<br><br><div class="sage-COV"><script type="text/x-sage">D[3]
</script></div>

<br><br><div class="sage-COV"><script type="text/x-sage">S.remove(v7)
W == V.span(S)
</script></div>

<br><br><div class="sage-COV"><script type="text/x-sage">S
</script></div>

<br><br><div class="sage-COV"><script type="text/x-sage">S == [v1, v3, v4]
</script></div>

<p>Notice that <span class="code">S</span> begins with all seven original vectors, and slowly gets whittled down to just the list <span class="code">[v1, v3, v4]</span>.  If you experiment with the above commands, be sure to return to the start and work your way through in order, or the results will not be right.</p>

<p>As a bonus, notice that the set of relations of linear dependence provided by Sage, <span class="code">D</span>, is itself a linearly independent set (but within a very different vector space).  Is that too weird?</p>

<br><br><div class="sage-COV"><script type="text/x-sage">U = QQ^7
U.linear_dependence(D) == []
</script></div>

<p>Now, can you answer the extra credit question from <a class="knowl" acro="COV" type="Example" title="Casting out vectors" knowl="./knowls/example.COV.knowl">Example COV</a> using Sage?</p>

<br><br><div class="sage-COV sagecell-practice"><script type="text/x-sage"># Sage practice area
</script></div>
