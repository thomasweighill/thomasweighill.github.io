<script>
$(function () {sagecell.makeSagecell({inputLocation: '.sage-PDM', linked: true});});
</script><h5 class="sage">
<span class="type">Sage</span> <span class="acro">PDM</span> <span class="titletext">Properties of Determinants of Matrices</span>
</h5>


<p>There are many properties of determinants detailed in this section.  You have the tools in Sage to explore all of them.  We will illustrate with just two.  One is not particularly deep, but we personally find the interplay between matrix multiplication and the determinant nothing short of amazing, so we will not pass up the chance to verify <a class="knowl" acro="DRMM" type="Theorem" title="Determinant Respects Matrix Multiplication" knowl="./knowls/theorem.DRMM.knowl">Theorem DRMM</a>.  Add some checks of other properties yourself.</p>

<p>We copy the sixth row of the matrix <span class="code">C</span> to the fourth row, so by <a class="knowl" acro="DERC" type="Theorem" title="Determinant with Equal Rows or Columns" knowl="./knowls/theorem.DERC.knowl">Theorem DERC</a>, the determinant is zero.</p>

<br><br><div class="sage-PDM"><script type="text/x-sage">C = matrix(QQ, [[-3,  4,  0,  1,  2,  0,  5,  0],
                [ 4,  0, -4,  7,  0,  5,  0,  5],
                [ 7,  4,  2,  2,  4,  0, -2,  8],
                [ 5, -4,  8,  2,  6, -1, -4, -4],
                [ 8,  0,  7,  4,  7,  5,  2, -3],
                [ 6,  5,  3,  7,  4,  2,  4, -3],
                [ 1,  6, -4, -4,  3,  8,  5, -2],
                [ 2,  4, -2,  8,  2,  5,  2,  2]])
C[3] = C[5]
C
</script></div>

<br><br><div class="sage-PDM"><script type="text/x-sage">C.determinant()
</script></div>

<p>Now, a demonstration of <a class="knowl" acro="DRMM" type="Theorem" title="Determinant Respects Matrix Multiplication" knowl="./knowls/theorem.DRMM.knowl">Theorem DRMM</a>.</p>

<br><br><div class="sage-PDM"><script type="text/x-sage">A = matrix(QQ, [[-4,  7, -2,  6,  8,  0, -4,  6],
                [ 1,  6,  5,  8,  2,  3,  1, -1],
                [ 5,  0,  7, -3,  7, -3,  6, -3],
                [-4,  5,  8,  3,  6,  8, -1, -1],
                [ 0,  0, -3, -3,  4,  4,  2,  5],
                [-3, -2, -3,  8,  8, -3, -1,  1],
                [-4,  0,  2,  4,  4,  4,  7,  2],
                [ 3,  3, -4,  5, -2,  3, -1,  5]])
B = matrix(QQ, [[ 1,  2, -4,  8, -1,  2, -1, -3],
                [ 3,  3, -2, -4, -3,  8,  1,  6],
                [ 1,  8,  4,  0,  4, -2,  0,  8],
                [ 6,  8,  1, -1, -4, -3, -2,  5],
                [ 0,  5,  1,  4, -3,  2, -3, -2],
                [ 2,  4,  0,  7,  8, -1,  5,  8],
                [ 7,  1,  1, -1, -1,  7, -2,  6],
                [ 2,  3,  4,  7,  3,  4,  7, -2]])
C = A*B; C
</script></div>

<br><br><div class="sage-PDM"><script type="text/x-sage">Adet = A.determinant(); Adet
</script></div>

<br><br><div class="sage-PDM"><script type="text/x-sage">Bdet = B.determinant(); Bdet
</script></div>

<br><br><div class="sage-PDM"><script type="text/x-sage">Cdet = C.determinant(); Cdet
</script></div>

<br><br><div class="sage-PDM"><script type="text/x-sage">Adet*Bdet == Cdet
</script></div>

<p>Earlier, in <a class="knowl" acro="NME1" type="Sage" title="" knowl="./knowls/sage.NME1.knowl">Sage NME1</a> we used the <span class="code">random_matrix()</span> constructor with the <span class="code">algorithm='unimodular'</span> keyword to create a nonsingular matrix.  We can now reveal that in this context, “unimodular” means “with determinant 1.”  So such a matrix will always be nonsingular by <a class="knowl" acro="SMZD" type="Theorem" title="Singular Matrices have Zero Determinants" knowl="./knowls/theorem.SMZD.knowl">Theorem SMZD</a>.  But more can be said.  It is not obvious at all, and <a knowl="./knowls/solution.PDM.M20.knowl">Solution PDM.M20</a> has just a partial explanation, but the inverse of a unimodular matrix with all integer entries will have an inverse with all integer entries.</p>

<p>With a fraction-free inverse many “textbook” exercises can be constructed through the use of unimodular matrices.  Experiment for yourself below.  An <span class="code">upper_bound</span> keyword can be used to control the size of the entries of the matrix, though this will have little control over the inverse.</p>

<br><br><div class="sage-PDM"><script type="text/x-sage">A = random_matrix(QQ, 5, algorithm='unimodular')
A, A.inverse()                          # random
</script></div>

<br><br><div class="sage-PDM sagecell-practice"><script type="text/x-sage"># Sage practice area
</script></div>
