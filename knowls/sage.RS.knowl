<script>
$(function () {sagecell.makeSagecell({inputLocation: '.sage-RS', linked: true});});
</script><h5 class="sage">
<span class="type">Sage</span> <span class="acro">RS</span> <span class="titletext">Reducing a Span</span>
</h5>


<p><a class="knowl" acro="BS" type="Theorem" title="Basis of a Span" knowl="./knowls/theorem.BS.knowl">Theorem BS</a> allows us to construct a reduced spanning set for a span.  As with the theorem, employing Sage we begin by constructing a matrix with the vectors of the spanning set as columns.  Here is a do-over of <a class="knowl" acro="RSC4" type="Example" title="Reducing a span in $\complex{4}$" knowl="./knowls/example.RSC4.knowl">Example RSC4</a>, illustrating the use of <a class="knowl" acro="BS" type="Theorem" title="Basis of a Span" knowl="./knowls/theorem.BS.knowl">Theorem BS</a> in Sage.</p>

<br><br><div class="sage-RS"><script type="text/x-sage">V = QQ^4
v1 = vector(QQ, [1,1,2,1])
v2 = vector(QQ, [2,2,4,2])
v3 = vector(QQ, [2,0,-1,1])
v4 = vector(QQ, [7,1,-1,4])
v5 = vector(QQ, [0,2,5,1])
S = [v1, v2, v3, v4, v5]
A = column_matrix(S)
T = [A.column(p) for p in A.pivots()]
T
</script></div>

<br><br><div class="sage-RS"><script type="text/x-sage">V.linear_dependence(T) == []
</script></div>

<br><br><div class="sage-RS"><script type="text/x-sage">V.span(S) == V.span(T)
</script></div>

<p>Notice how we compute <span class="code">T</span> with the single line that mirrors the construction of the set $T=\set{\vect{v}_{d_1},\,\vect{v}_{d_2},\,\vect{v}_{d_3},\,\ldots\,\vect{v}_{d_r}}$ in the statement of <a class="knowl" acro="BS" type="Theorem" title="Basis of a Span" knowl="./knowls/theorem.BS.knowl">Theorem BS</a>.  Again, the row-reducing is hidden in the use of the <span class="code">.pivot()</span> matrix method, which necessarily must compute the reduced row-echelon form.  The final two compute cells verify both conclusions of the theorem.</p>

<br><br><div class="sage-RS sagecell-practice"><script type="text/x-sage"># Sage practice area
</script></div>
