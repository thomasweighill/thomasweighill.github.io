<script>
$(function () {sagecell.makeSagecell({inputLocation: '.sage-SUTH3', linked: true});});
</script><h5 class="sage">
<span class="type">Sage</span> <span class="acro">SUTH3</span> <span class="titletext">Sage Under The Hood, Round 3</span>
</h5>


<p>We have seen that Sage is able to add two linear transformations, or multiply a single linear transformation by a scalar.  Under the hood, this is accomplished by simply adding matrix representations, or multiplying a matrix by a scalar, according to <a class="knowl" acro="MRSLT" type="Theorem" title="Matrix Representation of a Sum of Linear Transformations" knowl="./knowls/theorem.MRSLT.knowl">Theorem MRSLT</a> and <a class="knowl" acro="MRMLT" type="Theorem" title="Matrix Representation of a Multiple of a Linear Transformation" knowl="./knowls/theorem.MRMLT.knowl">Theorem MRMLT</a> (respectively).  <a class="knowl" acro="MRCLT" type="Theorem" title="Matrix Representation of a Composition of Linear Transformations" knowl="./knowls/theorem.MRCLT.knowl">Theorem MRCLT</a> says linear transformation composition is matrix representation multiplication.  Is it still a mystery why we use the symbol <span class="code">*</span> for linear transformation composition in Sage?</p>

<p>We could do several examples here, but you should now be able to construct them yourselves.  We will do just one, linear transformation composition is matrix representation multiplication.</p>

<br><br><div class="sage-SUTH3"><script type="text/x-sage">x1, x2, x3, x4 = var('x1, x2, x3, x4')
outputs = [-5*x1 - 2*x2 +   x3,
            4*x1 - 3*x2 - 3*x3,
            4*x1 - 6*x2 - 4*x3,
            5*x1 + 3*x2       ]
T_symbolic(x1, x2, x3) = outputs
outputs = [-3*x1 - x2 + x3 + 2*x4,
            7*x1 + x2 + x3 -   x4]
S_symbolic(x1, x2, x3, x4) = outputs
b0 = vector(QQ, [-1, -2,  2])
b1 = vector(QQ, [ 1,  1,  0])
b2 = vector(QQ, [ 0,  3, -5])
U = (QQ^3).subspace_with_basis([b0, b1, b2])
c0 = vector(QQ, [ 0,  0,  2,  1])
c1 = vector(QQ, [ 2, -3, -1, -6])
c2 = vector(QQ, [-2,  3,  2,  7])
c3 = vector(QQ, [ 1, -2, -4, -6])
V = (QQ^4).subspace_with_basis([c0, c1, c2, c3])
d0 = vector(QQ, [3, 4])
d1 = vector(QQ, [2, 3])
W = (QQ^2).subspace_with_basis([d0, d1])
T = linear_transformation(U, V, T_symbolic)
S = linear_transformation(V, W, S_symbolic)
(S*T).matrix('right')
</script></div>

<br><br><div class="sage-SUTH3"><script type="text/x-sage">S.matrix(side='right')*T.matrix(side='right')
</script></div>

<p>Extra credit: what changes do you need to make if you dropped the <span class="code">side='right'</span> option on these three matrix representations?</p>

<br><br><div class="sage-SUTH3 sagecell-practice"><script type="text/x-sage"># Sage practice area
</script></div>
