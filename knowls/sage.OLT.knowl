<script>
$(function () {sagecell.makeSagecell({inputLocation: '.sage-OLT', linked: true});});
</script><h5 class="sage">
<span class="type">Sage</span> <span class="acro">OLT</span> <span class="titletext">Operations on Linear Transformations</span>
</h5>


<p>It is possible in Sage to add linear transformations (<a class="knowl" acro="LTA" type="Definition" title="Linear Transformation Addition" knowl="./knowls/definition.LTA.knowl">Definition LTA</a>), multiply them by scalars (<a class="knowl" acro="LTSM" type="Definition" title="Linear Transformation Scalar Multiplication" knowl="./knowls/definition.LTSM.knowl">Definition LTSM</a>) and compose (<a class="knowl" acro="LTC" type="Definition" title="Linear Transformation Composition" knowl="./knowls/definition.LTC.knowl">Definition LTC</a>) them.  Then <a class="knowl" acro="SLTLT" type="Theorem" title="Sum of Linear Transformations is a Linear Transformation" knowl="./knowls/theorem.SLTLT.knowl">Theorem SLTLT</a> <a class="knowl" acro="MLTLT" type="Theorem" title="Multiple of a Linear Transformation is a Linear Transformation" knowl="./knowls/theorem.MLTLT.knowl">Theorem MLTLT</a>, and <a class="knowl" acro="CLTLT" type="Theorem" title="Composition of Linear Transformations is a Linear Transformation" knowl="./knowls/theorem.CLTLT.knowl">Theorem CLTLT</a> (respectively) tell us the results are again linear transformations.  Here are some examples:</p>

<br><br><div class="sage-OLT"><script type="text/x-sage">U = QQ^4
V = QQ^2
A = matrix(QQ, 2, 4, [[-1, 3, 4,  5],
                      [ 2, 0, 3, -1]])
T = linear_transformation(U, V, A, side='right')
B = matrix(QQ, 2, 4, [[-7, 4, -2,  0],
                      [ 1, 1,  8, -3]])
S = linear_transformation(U, V, B, side='right')
P = S + T
P
</script></div>

<br><br><div class="sage-OLT"><script type="text/x-sage">Q = S*5
Q
</script></div>

<p>Perhaps the only surprise in all this is the necessity of writing scalar multiplication on the right of the linear transformation (rather on the left, as we do in the text).  We will recycle the linear transformation <span class="code">T</span> from above and redefine <span class="code">S</span> to form an example of composition.</p>

<br><br><div class="sage-OLT"><script type="text/x-sage">W = QQ^3
C = matrix(QQ, [[ 4, -2],
                [-1,  3],
                [-3,  2]])
S = linear_transformation(V, W, C, side='right')
R = S*T
R
</script></div>

<p>We use the star symbol (<span class="code">*</span>) to indicate composition of linear transformations.  Notice that the order of the two linear transformations we compose is important, and Sage's order agrees with the text.  The order does not have to agree, and there are good arguments to have it reversed, so be careful if you read about composition elsewhere.</p>

<p>This is a good place to expand on <a class="knowl" acro="VSLT" type="Theorem" title="Vector Space of Linear Transformations" knowl="./knowls/theorem.VSLT.knowl">Theorem VSLT</a>, which says that with definitions of addition and scalar multiplication of linear transformations we then arrive at a vector space.  A vector space full of linear transformations.  Objects in Sage have “parents” — vectors have vector spaces for parents, fractions of integers have the rationals as parents.  What is the parent of a linear transformation?  Let us see, by investigating the parent of <span class="code">S</span> just defined above.</p>

<br><br><div class="sage-OLT"><script type="text/x-sage">P = S.parent()
P
</script></div>

<p>“Morphism” is a general term for a function that “preserves structure” or “respects operations.”  In Sage a collection of morphisms is referenced as a “homset” or a “homspace.”  In this example, we have a homset that is the vector space of linear transformations that go from a dimension 2 vector space over the rationals to a dimension 3 vector space over the rationals.  What can we do with it?  A few things, but not everything you might imagine.  It does have a basis, containing a few very simple linear transformations:</p>

<br><br><div class="sage-OLT"><script type="text/x-sage">P.basis()
</script></div>

<p>You can create a set of linear transformations with the <span class="code">Hom()</span> function, simply by giving the domain and codomain.</p>

<br><br><div class="sage-OLT"><script type="text/x-sage">H = Hom(QQ^6, QQ^9)
H
</script></div>

<p>An understanding of Sage's homsets is not critical to understanding the use of Sage during the remainder of this course.  But such an understanding can be very useful in understanding some of Sage's more advanced and powerful features.</p>

<br><br><div class="sage-OLT sagecell-practice"><script type="text/x-sage"># Sage practice area
</script></div>
