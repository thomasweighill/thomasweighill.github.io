<script>
$(function () {sagecell.makeSagecell({inputLocation: '.sage-SM', linked: true});});
</script><h5 class="sage">
<span class="type">Sage</span> <span class="acro">SM</span> <span class="titletext">Similar Matrices</span>
</h5>


<p>It is quite easy to determine if two matrices are similar, using the matrix method <span class="code">.is_similar()</span>.  However, computationally this can be a very difficult proposition, so support in Sage is incomplete now, though it will always return a result for matrices with rational entries.  Here are examples where the two matrices are and are not similar.  Notice that the keyword option <span class="code">transformation=True</span> will cause a pair to be returned, such that if the matrices are indeed similar, the matrix effecting the similarity transformation will be in the second slot of the pair.</p>

<br><br><div class="sage-SM"><script type="text/x-sage">A = matrix(QQ, [[ 25,   2,  -8,  -1,  11,  26,  35],
                [ 28,   2, -15,   2,   6,  34,  31],
                [  1, -17, -25,  28, -44,  26, -23],
                [ 36,  -2, -24,  10,  -1,  50,  39],
                [  0,  -7, -13,  14, -21,  14, -11],
                [-22, -17, -16,  27, -51,   1, -53],
                [  -1, 10,  17, -18,  28, -18,  15]])
B = matrix(QQ, [[-89, -16, -55, -23, -104, -48, -67],
                [-15,   1, -20, -21,  -20, -60, -26],
                [ 48,   6,  37,  25,   59,  64,  46],
                [-96, -16, -49, -16, -114, -23, -67],
                [ 56,  10,  33,  13,   67,  29,  37],
                [ 10,   2,   2,  -2,   12,  -9,   4],
                [ 28,   6,  13,   1,   32,  -4,  16]])
is_sim, trans = A.is_similar(B, transformation=True)
is_sim
</script></div>

<p>Since we knew in advance these two matrices are similar, we requested the transformation matrix, so the output is a pair.  The similarity matrix is a bit of a mess, so we will use three Sage routines to clean up <span class="code">trans</span>.  We convert the entries to numerical approximations, clip very small values (less than $10^{-5}$) to zero and then round to three decimal places.  You can experiment printing just <span class="code">trans</span> all by itself.</p>

<br><br><div class="sage-SM"><script type="text/x-sage">trans.change_ring(RDF).zero_at(10^-5).round(3)
</script></div>

<p>The matrix <span class="code">C</span> is not similar to <span class="code">A</span> (and hence not similar to <span class="code">B</span> by <a class="knowl" acro="SER" type="Theorem" title="Similarity is an Equivalence Relation" knowl="./knowls/theorem.SER.knowl">Theorem SER</a>), so we illustrate the return value when we do not request the similarity matrix (since it does not even exist).</p>

<br><br><div class="sage-SM"><script type="text/x-sage">C = matrix(QQ, [[ 16, -26,  19,  -56,  26,   8, -49],
                [ 20, -43,  36, -102,  52,  23, -65],
                [-18,  29, -21,   62, -30,  -9,  56],
                [-17,  31, -27,   73, -37, -16,  49],
                [ 18, -36,  30,  -82,  43,  18, -54],
                [-32,  62, -56,  146, -77, -35,  88],
                [ 11, -19,  17,  -44,  23,  10, -29]])
C.is_similar(A)
</script></div>

<br><br><div class="sage-SM sagecell-practice"><script type="text/x-sage"># Sage practice area
</script></div>
