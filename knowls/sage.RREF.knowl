<script>
$(function () {sagecell.makeSagecell({inputLocation: '.sage-RREF', linked: true});});
</script><h5 class="sage">
<span class="type">Sage</span> <span class="acro">RREF</span> <span class="titletext">Reduced Row-Echelon Form</span>
</h5>


<p>There has been a lot of information about using Sage with vectors and matrices in this section.  But we can now construct the coefficient matrix of a system of equations and the vector of constants.  From these pieces we can easily construct the augmented matrix, which we could subject to a series of row operations.  Computers are suppose to make routine tasks easy so we can concentrate on bigger ideas.  No exception here, Sage can bring a matrix (augmented or not) to reduced row echelon form with no problem.  Let us redo <a class="knowl" acro="SAB" type="Example" title="Solutions for Archetype B" knowl="./knowls/example.SAB.knowl">Example SAB</a> with Sage.</p>

<br><br><div class="sage-RREF"><script type="text/x-sage">coeff = matrix(QQ, [[-7, -6, -12],
                    [5,   5,   7],
                    [1,   0,   4]])
const = vector(QQ, [-33, 24, 5])
aug = coeff.augment(const)
aug.rref()
</script></div>

<p>And the solution $x_1=-3$, $x_2=5$, $x_3=2$ is now obvious.  Beautiful.</p>

<p>You may notice that Sage has some commands with the word “echelon” in them.  For now, these should be avoided like the plague, as there are some subtleties in how they work.  The matrix method <span class="code">.rref()</span> will be sufficient for our purposes for a long, long time — so stick with it.</p>

<br><br><div class="sage-RREF sagecell-practice"><script type="text/x-sage"># Sage practice area
</script></div>
