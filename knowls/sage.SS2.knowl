<script>
$(function () {sagecell.makeSagecell({inputLocation: '.sage-SS2', linked: true});});
</script><h5 class="sage">
<span class="type">Sage</span> <span class="acro">SS2</span> <span class="titletext">Solving Systems, Part 2</span>
</h5>


<p>We can now resolve a bit of the mystery around Sage's <span class="code">.solve_right()</span> method.  Recall from <a class="knowl" acro="SS1" type="Sage" title="" knowl="./knowls/sage.SS1.knowl">Sage SS1</a> that if a linear system has solutions, Sage only provides one solution, even in the case when there are infinitely many solutions.  In our previous discussion, we used the system from <a class="knowl" acro="ISSI" type="Example" title="Describing infinite solution sets, Archetype I" knowl="./knowls/example.ISSI.knowl">Example ISSI</a>.</p>

<br><br><div class="sage-SS2"><script type="text/x-sage">coeff = matrix(QQ, [[ 1,  4,  0, -1,  0,   7, -9],
                    [ 2,  8, -1,  3,  9, -13,  7],
                    [ 0,  0,  2, -3, -4,  12, -8],
                    [-1, -4,  2,  4,  8, -31, 37]])
const = vector(QQ, [3, 9, 1, 4])
coeff.solve_right(const)
</script></div>

<p>The vector $\vect{c}$ described in the statement of <a class="knowl" acro="VFSLS" type="Theorem" title="Vector Form of Solutions to Linear Systems" knowl="./knowls/theorem.VFSLS.knowl">Theorem VFSLS</a> is precisely the solution returned from Sage's <span class="code">.solve_right()</span> method.  This is the solution where we choose the $\alpha_i$, $1\leq i\leq n-r$ to all be zero, in other words, each free variable is set to zero (how convenient!).  Free variables correspond to columns of the row-reduced augmented matrix that are <em>not</em> pivot columns.  So we can profitably employ the <span class="code">.nonpivots()</span> matrix method.  Let us put this all together.</p>

<br><br><div class="sage-SS2"><script type="text/x-sage">aug = coeff.augment(const)
reduced = aug.rref()
reduced
</script></div>

<br><br><div class="sage-SS2"><script type="text/x-sage">aug.nonpivots()
</script></div>

<p>Since the eighth column (numbered 7) of the reduced row-echelon form is not a pivot column, we know by <a class="knowl" acro="RCLS" type="Theorem" title="Recognizing Consistency of a Linear System" knowl="./knowls/theorem.RCLS.knowl">Theorem RCLS</a> that the system is consistent.  We can use the indices of the remaining non-pivot columns to place zeros into the vector $\vect{c}$ in those locations.  The remaining entries of $\vect{c}$ are the entries of the reduced row-echelon form in the last column, inserted in that order.  Boom!</p>

<p>So we have three ways to get to the same solution: (a) row-reduce the augmented matrix and set the free variables all to zero, (b) row-reduce the augmented matrix and use the formula from <a class="knowl" acro="VFSLS" type="Theorem" title="Vector Form of Solutions to Linear Systems" knowl="./knowls/theorem.VFSLS.knowl">Theorem VFSLS</a> to construct $\vect{c}$, and (c) use Sage's <span class="code">.solve_right()</span> method.</p>

<p>One mystery left to resolve.  How can we get Sage to give us infinitely many solutions in the case of systems with an infinite solution set?  This is best handled in the next section, <a href="section-SS.html" title="Spanning Sets">Section SS</a>, specifically in <a class="knowl" acro="SS3" type="Sage" title="" knowl="./knowls/sage.SS3.knowl">Sage SS3</a>.</p>

<br><br><div class="sage-SS2 sagecell-practice"><script type="text/x-sage"># Sage practice area
</script></div>
