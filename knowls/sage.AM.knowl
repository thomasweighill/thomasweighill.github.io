<script>
$(function () {sagecell.makeSagecell({inputLocation: '.sage-AM', linked: true});});
</script><h5 class="sage">
<span class="type">Sage</span> <span class="acro">AM</span> <span class="titletext">Augmented Matrix</span>
</h5>


<p>Sage has a matrix method, <span class="code">.augment()</span>, that will join two matrices, side-by-side provided they both have the same number of rows.  The same method will allow you to augment a matrix with a column vector, as described in <a class="knowl" acro="AM" type="Definition" title="Augmented Matrix" knowl="./knowls/definition.AM.knowl">Definition AM</a>, provided the number of entries in the vector matches the number of rows for the matrix.  Here we reprise the construction in <a class="knowl" acro="AMAA" type="Example" title="Augmented matrix for Archetype A" knowl="./knowls/example.AMAA.knowl">Example AMAA</a>.  We will now format our matrices as input across several lines, a practice you may use in your own worksheets, or not.</p>

<br><br><div class="sage-AM"><script type="text/x-sage">A = matrix(QQ, 3, 3, [[1, -1, 2],
                      [2,  1, 1],
                      [1,  1, 0]])
b = vector(QQ, [1, 8, 5])
M = A.augment(b)
M
</script></div>

<p>Notice that the matrix method <span class="code">.augment()</span> needs some input, in the above case, the vector <span class="code">b</span>.  This will explain the need for the parentheses on the end of the “dot” commands, even if the particular command does not expect input.</p>

<p>Some methods allow optional input, typically using keywords.  Matrices can track subdivisions, making breaks between rows and/or columns.  When augmenting, you can ask for the subdivision to be included.  Evalute the compute cell above if you have not already, so that <span class="code">A</span> and <span class="code">b</span> are defined, and then evaluate:</p>

<br><br><div class="sage-AM"><script type="text/x-sage">M = A.augment(b, subdivide=True)
M
</script></div>

<p>As a partial demonstration of manipulating subdivisions of matrices we can reset the subdivisions of <span class="code">M</span> with the <span class="code">.subdivide()</span> method.  We provide a list of rows to subdivide <em>before</em>, then a list of columns to subdivide <em>before</em>, where we remember that counting begins at zero.</p>

<br><br><div class="sage-AM"><script type="text/x-sage">M.subdivide([1,2],[1])
M
</script></div>

<br><br><div class="sage-AM sagecell-practice"><script type="text/x-sage"># Sage practice area
</script></div>
