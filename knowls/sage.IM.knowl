<script>
$(function () {sagecell.makeSagecell({inputLocation: '.sage-IM', linked: true});});
</script><h5 class="sage">
<span class="type">Sage</span> <span class="acro">IM</span> <span class="titletext">Identity Matrix</span>
</h5>


<p>It is straightforward to create an identity matrix in Sage.  Just specify the number system and the number of rows (which will equal the number of columns, so you do not specify that since it would be redundant).  The number system can be left out, but the result will have entries from the integers (<span class="code">ZZ</span>), which in this course is unlikely to be what you really want.</p>

<br><br><div class="sage-IM"><script type="text/x-sage">id5 = identity_matrix(QQ, 5)
id5
</script></div>

<br><br><div class="sage-IM"><script type="text/x-sage">id4 = identity_matrix(4)
id4.base_ring()
</script></div>

<p>Notice that we do not use the now-familiar dot notation to <em>create</em> an identity matrix.  What would we use the dot notation on anyway?  For these reasons we call the <span class="code">identity_matrix()</span> function a <em class="term">constructor</em>, since it builds something from scratch, in this case a very particular type of matrix.</p>

<p>We mentioned above that an identity matrix is in reduced row-echelon form.  What happens if we try to row-reduce a matrix that is already in reduced row-echelon form?  By the uniqueness of the result, there should be no change.  The following code illustrates this.  Notice that <span class="code">=</span> is used to <em>assign</em> an object to a new name, while <span class="code">==</span> is used to <em>test equality</em> of two objects.  I frequently make the mistake of forgetting the second equal sign when I mean to test equality.</p>

<br><br><div class="sage-IM"><script type="text/x-sage">id50 = identity_matrix(QQ, 50)
id50 == id50.rref()
</script></div>

<br><br><div class="sage-IM sagecell-practice"><script type="text/x-sage"># Sage practice area
</script></div>
