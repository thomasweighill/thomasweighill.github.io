<script>
$(function () {sagecell.makeSagecell({inputLocation: '.sage-V', linked: true});});
</script><h5 class="sage">
<span class="type">Sage</span> <span class="acro">V</span> <span class="titletext">Vectors</span>
</h5>


<p>Vectors in Sage are built, manipulated and interrogated in much the same way as matrices (see <a class="knowl" acro="M" type="Sage" title="" knowl="./knowls/sage.M.knowl">Sage M</a>).  However as simple lists (“one-dimensional,” not “two-dimensional” such as matrices that look more tabular) they are simpler to construct and manipulate.  Sage will print a vector across the screen, even if we wish to interpret it as a column vector.  It will be delimited by parentheses (<span class="code">(,)</span>) which allows us to distinguish a vector from a matrix with just one row, if we look carefully.  The number of “slots” in a vector is not referred to in Sage as rows or columns, but rather by “degree.”  Here are some examples (remember to start counting from zero):</p>

<br><br><div class="sage-V"><script type="text/x-sage">v = vector(QQ, 4, [1, 1/2, 1/3, 1/4])
v
</script></div>

<br><br><div class="sage-V"><script type="text/x-sage">v.degree()
</script></div>

<br><br><div class="sage-V"><script type="text/x-sage">v.parent()
</script></div>

<br><br><div class="sage-V"><script type="text/x-sage">v[2]
</script></div>

<br><br><div class="sage-V"><script type="text/x-sage">w = vector([1, 2, 3, 4, 5, 6])
w
</script></div>

<br><br><div class="sage-V"><script type="text/x-sage">w.degree()
</script></div>

<br><br><div class="sage-V"><script type="text/x-sage">w.parent()
</script></div>

<br><br><div class="sage-V"><script type="text/x-sage">w[3]
</script></div>

<p>Notice that if you use commands like <span class="code">.parent()</span> you will sometimes see references to “free modules.”  This is a technical generalization of the notion of a vector, which is beyond the scope of this course, so just mentally convert to vectors when you see this term.</p>

<p>The zero vector is super easy to build, but be sure to specify what number system your zero is from.</p>

<br><br><div class="sage-V"><script type="text/x-sage">z = zero_vector(QQ, 5)
z
</script></div>

<p>Notice that while using Sage, we try to remain consistent with our mathematical notation conventions.  This is not required, as you can give items in Sage very long names if you wish.  For example, the following is perfectly legitimate, as you can see.</p>

<br><br><div class="sage-V"><script type="text/x-sage">blatzo = matrix(QQ, 2, [1, 2, 3, 4])
blatzo
</script></div>

<p>In fact, our use of capital letters for matrices actually contradicts some of the conventions for naming objects in Sage, so there are good reasons for <em>not</em> mirroring our mathematical notation.</p>

<br><br><div class="sage-V sagecell-practice"><script type="text/x-sage"># Sage practice area
</script></div>
