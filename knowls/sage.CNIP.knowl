<script>
$(function () {sagecell.makeSagecell({inputLocation: '.sage-CNIP', linked: true});});
</script><h5 class="sage">
<span class="type">Sage</span> <span class="acro">CNIP</span> <span class="titletext">Conjugates, Norms and Inner Products</span>
</h5>


<p>Conjugates, of complex numbers and of vectors, are straightforward, in <span class="code">QQbar</span> or in <span class="code">CDF</span>.</p>

<br><br><div class="sage-CNIP"><script type="text/x-sage">alpha = QQbar(2 + 3*I)
alpha.conjugate()
</script></div>

<br><br><div class="sage-CNIP"><script type="text/x-sage">beta = CDF(2+3*I)
beta.conjugate()
</script></div>

<br><br><div class="sage-CNIP"><script type="text/x-sage">v = vector(QQbar, [5-3*I, 2+6*I])
v.conjugate()
</script></div>

<br><br><div class="sage-CNIP"><script type="text/x-sage">w = vector(CDF, [5-3*I, 2+6*I])
w.conjugate()
</script></div>

<p>The term “inner product” means slightly different things to different people.  For some, it is the “dot product” that you may have seen in a calculus or physics course.  Our inner product could be called the “Hermitian inner product” to emphasize the use of vectors over the complex numbers and conjugating some of the entries.  So Sage has a <span class="code">.dot_product()</span>, <span class="code">.inner_product()</span>, and <span class="code">.hermitian_inner_product()</span> — we want to use the last one.</p>

<p>From now on, when we mention an inner product in the context of using Sage, we will mean <span class="code">.hermitian_inner_product()</span>.  We will redo the first part of <a class="knowl" acro="CSIP" type="Example" title="Computing some inner products" knowl="./knowls/example.CSIP.knowl">Example CSIP</a>.  Notice that the syntax is a bit asymmetric.</p>

<br><br><div class="sage-CNIP"><script type="text/x-sage">u = vector(QQbar, [2+3*I,  5+2*I, -3+I])
v = vector(QQbar, [1+2*I, -4+5*I,  5*I])
u.hermitian_inner_product(v)
</script></div>

<p>Norms are as easy as conjugates.  Easier maybe.  It might be useful to realize that Sage uses entirely distinct code to compute an exact norm over <span class="code">QQbar</span> versus an approximate norm over <span class="code">CDF</span>, though that is totally transparent as you issue commands.  Here is <a class="knowl" acro="CNSV" type="Example" title="Computing the norm of some vectors" knowl="./knowls/example.CNSV.knowl">Example CNSV</a> reprised.</p>

<br><br><div class="sage-CNIP"><script type="text/x-sage">entries = [3+2*I, 1-6*I, 2+4*I, 2+I]
u = vector(QQbar, entries)
u.norm()
</script></div>

<br><br><div class="sage-CNIP"><script type="text/x-sage">u = vector(CDF, entries)
u.norm()
</script></div>

<br><br><div class="sage-CNIP"><script type="text/x-sage">numerical_approx(5*sqrt(3), digits = 30)
</script></div>

<p>We have three different numerical approximations, the latter 30-digit number being an approximation to the answer in the text.  But there is no inconsistency between them.  The first, an algebraic number, is represented internally as $5*a$ where $a$ is a root of the polynomial equation $x^2-3=0$, in other words it is $5\sqrt{3}$.  The <span class="code">CDF</span> value prints with a few digits less than what is carried internally.  Notice that our different definitions of the inner product make no difference in the computation of a norm.</p>

<p>One warning now that we are working with complex numbers.  It is easy to “clobber” the symbol <span class="code">I</span> used for the imaginary number $i$.  In other words, Sage will allow you to assign it to something else, rendering it useless.  An identity matrix is a likely reassignment.  If you run the next compute cell, be sure to evaluate the compute cell afterward to restore <span class="code">I</span> to its usual role.</p>

<br><br><div class="sage-CNIP"><script type="text/x-sage">alpha = QQbar(5 - 6*I)
I = identity_matrix(2)
beta = QQbar(2+5*I)
</script></div>

<br><br><div class="sage-CNIP"><script type="text/x-sage">restore()
I^2
</script></div>

<p>We will finish with a verification of <a class="knowl" acro="IPN" type="Theorem" title="Inner Products and Norms" knowl="./knowls/theorem.IPN.knowl">Theorem IPN</a>.  To test equality it is best if we work with entries from <span class="code">QQbar</span>.</p>

<br><br><div class="sage-CNIP"><script type="text/x-sage">v = vector(QQbar, [2-3*I, 9+5*I, 6+2*I, 4-7*I])
v.hermitian_inner_product(v) == v.norm()^2
</script></div>

<br><br><div class="sage-CNIP sagecell-practice"><script type="text/x-sage"># Sage practice area
</script></div>
